Overview
---------------------------------------------
Graphite consists of two major components

 1) the frontend Django webapp that runs under mod_python Apache
 2) the backend carbon-agent.py daemon

Client applications connect to the running carbon-agent.py daemon on port 2003 and send it
lines of text of the following format:

"my.metric.name value unix_timestamp", for example:

"performance.servers.www01.cpuUsage 42.5 1208815315"

The metric name is like a filesystem path that uses . as a seperator instead of /
The value is some scalar integer or floating point value
The unix_timestamp is unix epoch time, as an integer

Each line like this corresponds to one data point for one metric.

Once you've got some clients sending data to carbon-agent, you can view
graphs of that data in the frontend webapp.


Installation
---------------------------------------------
Download the graphite-0.1.tgz file.
Extract it like so "sudo tar xvf graphite-0.1.tgz -C /".
This will create a /usr/local/graphite/ directory, as well as put an init script
in /etc/init.d/.


Setting up the graphite webapp
---------------------------------------------
Once you've installed graphite the first thing to do is to configure an apache vhost.
A sample configuration is provided in example-apache-vhost.conf.
Once you're apache vhost is setup, you must create a database for the webapp to use.
By default graphite is configured to use a sqlite database located at:

/usr/local/graphite/storage/graphite.db

To use this default setting, simply create an empty database file like so:

touch /usr/local/graphite/storage/graphite.db

Don't forget to chown it to be owned by the user that apache runs as!
Apache needs write access to this database.

If you wish to use mysql or some other database, change the DB_* settings in the webapp
configuration file like so:

cd /usr/local/graphite/web/
(look at settings.py for settings you may want to change)
(create a new local_settings.py that overrides the settings you wish to change)

Once your database is configured, Django needs to initialize it, do this like so:

cd /usr/local/graphite/web/
python manage.py syncdb

This will create all the tables the webapp needs. Now you're finally ready to run the webapp

However keep in mind there will not be any data there until you send some to carbon-agent.py!

Setting up carbon-agent.py
--------------------------------------------
Decide what user you want to run carbon-agent.py as, for this example I'll use 'nobody'.

cd /usr/local/graphite/storage/
chown -R nobody whisper
cd ../carbon-agent/
./carbon-agent.py -u nobody
tail -f log/*.log #watch the carbon logs to verify that everything is running without errors

Now that carbon-agent.py is running you just need to send it data! Check out the example-client.py
